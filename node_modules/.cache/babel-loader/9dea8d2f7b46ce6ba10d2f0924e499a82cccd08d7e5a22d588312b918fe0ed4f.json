{"ast":null,"code":"var _jsxFileName = \"D:\\\\FE\\\\AI\\\\ai-chat-app\\\\src\\\\components\\\\WriteText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ComponentStyles.css'; // Để thêm CSS chung\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WriteText() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [generatedText, setGeneratedText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleGenerate = async () => {\n    if (!prompt.trim()) {\n      alert(\"Vui lòng nhập chủ đề hoặc ý tưởng để viết văn.\");\n      return;\n    }\n    setIsLoading(true);\n    setGeneratedText(''); // Xóa văn bản cũ\n    // Ở đây bạn sẽ gọi API của AI để tạo văn bản dựa trên prompt\n    // Ví dụ:\n    try {\n      // Giả lập cuộc gọi API\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      const fakeGeneratedText = `Dựa trên yêu cầu \"${prompt}\", đây là một đoạn văn được tạo ra bởi AI. Bạn có thể sử dụng nó làm khởi điểm cho bài viết của mình.`;\n      setGeneratedText(fakeGeneratedText);\n    } catch (error) {\n      console.error(\"Lỗi khi tạo văn bản:\", error);\n      setGeneratedText(\"Đã có lỗi xảy ra khi tạo văn bản.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vi\\u1EBFt v\\u0103n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"text-input\",\n      placeholder: \"Nh\\u1EADp ch\\u1EE7 \\u0111\\u1EC1 ho\\u1EB7c \\xFD t\\u01B0\\u1EDFng b\\u1EA1n mu\\u1ED1n AI vi\\u1EBFt (v\\xED d\\u1EE5: 'm\\u1ED9t c\\xE2u chuy\\u1EC7n khoa h\\u1ECDc vi\\u1EC5n t\\u01B0\\u1EDFng v\\u1EC1 du h\\xE0nh th\\u1EDDi gian', 'm\\u1ED9t \\u0111o\\u1EA1n v\\u0103n v\\u1EC1 l\\u1EE3i \\xEDch c\\u1EE7a thi\\u1EC1n \\u0111\\u1ECBnh')...\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      rows: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"action-button\",\n      onClick: handleGenerate,\n      disabled: isLoading,\n      children: isLoading ? 'Đang tạo văn bản...' : 'Tạo văn bản'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), generatedText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"V\\u0103n b\\u1EA3n \\u0111\\u01B0\\u1EE3c t\\u1EA1o:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: generatedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(WriteText, \"S4JZwvEbzk3yJiy7KpJEOotn6AU=\");\n_c = WriteText;\nexport default WriteText;\nvar _c;\n$RefreshReg$(_c, \"WriteText\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WriteText","_s","prompt","setPrompt","generatedText","setGeneratedText","isLoading","setIsLoading","handleGenerate","trim","alert","Promise","resolve","setTimeout","fakeGeneratedText","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/FE/AI/ai-chat-app/src/components/WriteText.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ComponentStyles.css'; // Để thêm CSS chung\r\n\r\nfunction WriteText() {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [generatedText, setGeneratedText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleGenerate = async () => {\r\n    if (!prompt.trim()) {\r\n      alert(\"Vui lòng nhập chủ đề hoặc ý tưởng để viết văn.\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setGeneratedText(''); // Xóa văn bản cũ\r\n    // Ở đây bạn sẽ gọi API của AI để tạo văn bản dựa trên prompt\r\n    // Ví dụ:\r\n    try {\r\n      // Giả lập cuộc gọi API\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      const fakeGeneratedText = `Dựa trên yêu cầu \"${prompt}\", đây là một đoạn văn được tạo ra bởi AI. Bạn có thể sử dụng nó làm khởi điểm cho bài viết của mình.`;\r\n      setGeneratedText(fakeGeneratedText);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi tạo văn bản:\", error);\r\n      setGeneratedText(\"Đã có lỗi xảy ra khi tạo văn bản.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"component-container\">\r\n      <h2>Viết văn</h2>\r\n      <textarea\r\n        className=\"text-input\"\r\n        placeholder=\"Nhập chủ đề hoặc ý tưởng bạn muốn AI viết (ví dụ: 'một câu chuyện khoa học viễn tưởng về du hành thời gian', 'một đoạn văn về lợi ích của thiền định')...\"\r\n        value={prompt}\r\n        onChange={(e) => setPrompt(e.target.value)}\r\n        rows=\"5\"\r\n      ></textarea>\r\n      <button className=\"action-button\" onClick={handleGenerate} disabled={isLoading}>\r\n        {isLoading ? 'Đang tạo văn bản...' : 'Tạo văn bản'}\r\n      </button>\r\n      {generatedText && (\r\n        <div className=\"result-box\">\r\n          <h3>Văn bản được tạo:</h3>\r\n          <p>{generatedText}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WriteText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACN,MAAM,CAACO,IAAI,CAAC,CAAC,EAAE;MAClBC,KAAK,CAAC,gDAAgD,CAAC;MACvD;IACF;IAEAH,YAAY,CAAC,IAAI,CAAC;IAClBF,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB;IACA;IACA,IAAI;MACF;MACA,MAAM,IAAIM,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACvD,MAAME,iBAAiB,GAAG,qBAAqBZ,MAAM,uGAAuG;MAC5JG,gBAAgB,CAACS,iBAAiB,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CV,gBAAgB,CAAC,mCAAmC,CAAC;IACvD,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACER,OAAA;IAAKkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBvB,OAAA;MACEkB,SAAS,EAAC,YAAY;MACtBM,WAAW,EAAC,2TAA2J;MACvKC,KAAK,EAAEtB,MAAO;MACduB,QAAQ,EAAGC,CAAC,IAAKvB,SAAS,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,IAAI,EAAC;IAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACZvB,OAAA;MAAQkB,SAAS,EAAC,eAAe;MAACY,OAAO,EAAErB,cAAe;MAACsB,QAAQ,EAAExB,SAAU;MAAAY,QAAA,EAC5EZ,SAAS,GAAG,qBAAqB,GAAG;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EACRlB,aAAa,iBACZL,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBnB,OAAA;QAAAmB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BvB,OAAA;QAAAmB,QAAA,EAAId;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CAjDQD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAmDlB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}