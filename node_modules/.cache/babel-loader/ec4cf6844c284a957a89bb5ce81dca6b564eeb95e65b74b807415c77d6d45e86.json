{"ast":null,"code":"var _jsxFileName = \"D:\\\\FE\\\\AI\\\\ai-chat-app\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ComponentStyles.css'; // Để thêm CSS chung\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null); // Ref để cuộn xuống dưới cùng\n\n  // Cuộn xuống cuối tin nhắn khi có tin nhắn mới\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim()) return;\n    const newUserMessage = {\n      sender: 'user',\n      text: inputMessage\n    };\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n\n    // Ở đây bạn sẽ gọi API của AI để nhận phản hồi\n    try {\n      // Giả lập cuộc gọi API\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const aiResponse = {\n        sender: 'ai',\n        text: `Chào bạn! Bạn vừa hỏi: \"${inputMessage}\". Tôi là AI và có thể giúp gì cho bạn?`\n      };\n      setMessages(prevMessages => [...prevMessages, aiResponse]);\n    } catch (error) {\n      console.error(\"Lỗi khi gửi tin nhắn:\", error);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'ai',\n        text: \"Xin lỗi, đã có lỗi xảy ra. Vui lòng thử lại sau.\"\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !isLoading) {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component-container chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat v\\u1EDBi AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-message\",\n        children: \"B\\u1EAFt \\u0111\\u1EA7u cu\\u1ED9c tr\\xF2 chuy\\u1EC7n c\\u1EE7a b\\u1EA1n...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 35\n      }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message ai typing\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"AI \\u0111ang g\\xF5...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"message-input\",\n        placeholder: \"Nh\\u1EADp tin nh\\u1EAFn c\\u1EE7a b\\u1EA1n...\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        onKeyPress: handleKeyPress,\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSendMessage,\n        disabled: isLoading,\n        children: \"G\\u1EEDi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"f+uaimTb6IX5z+qjNoK9mHQEhR8=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","newUserMessage","sender","text","prevMessages","Promise","resolve","setTimeout","aiResponse","error","console","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","index","ref","type","placeholder","value","onChange","target","onKeyPress","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/FE/AI/ai-chat-app/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ComponentStyles.css'; // Để thêm CSS chung\r\n\r\nfunction ChatBot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null); // Ref để cuộn xuống dưới cùng\r\n\r\n  // Cuộn xuống cuối tin nhắn khi có tin nhắn mới\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputMessage.trim()) return;\r\n\r\n    const newUserMessage = { sender: 'user', text: inputMessage };\r\n    setMessages((prevMessages) => [...prevMessages, newUserMessage]);\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    // Ở đây bạn sẽ gọi API của AI để nhận phản hồi\r\n    try {\r\n      // Giả lập cuộc gọi API\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      const aiResponse = { sender: 'ai', text: `Chào bạn! Bạn vừa hỏi: \"${inputMessage}\". Tôi là AI và có thể giúp gì cho bạn?` };\r\n      setMessages((prevMessages) => [...prevMessages, aiResponse]);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi gửi tin nhắn:\", error);\r\n      setMessages((prevMessages) => [...prevMessages, { sender: 'ai', text: \"Xin lỗi, đã có lỗi xảy ra. Vui lòng thử lại sau.\" }]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !isLoading) {\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"component-container chat-container\">\r\n      <h2>Chat với AI</h2>\r\n      <div className=\"message-list\">\r\n        {messages.length === 0 && <p className=\"no-message\">Bắt đầu cuộc trò chuyện của bạn...</p>}\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender}`}>\r\n            <p>{msg.text}</p>\r\n          </div>\r\n        ))}\r\n        {isLoading && (\r\n          <div className=\"message ai typing\">\r\n            <p>AI đang gõ...</p>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} /> {/* Dùng để cuộn xuống */}\r\n      </div>\r\n      <div className=\"message-input-area\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"message-input\"\r\n          placeholder=\"Nhập tin nhắn của bạn...\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          disabled={isLoading}\r\n        />\r\n        <button className=\"send-button\" onClick={handleSendMessage} disabled={isLoading}>\r\n          Gửi\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}